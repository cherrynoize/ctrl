--[[
  ____ _        _
 / ___| |_ _ __| |
| |   | __| '__| | - Simple awesome wm widget library
| |___| |_| |  | | - https://github.com/cherrynoize/ctrl
 \____|\__|_|  |_| - cherry-noize
]]--

-- Module imports.
local wibox = require "wibox"
local gears = require "gears"
local beautiful = require "beautiful"

-- Initialize configuration table.
local config = {}

-- Widget configuration.
config.path        = '/sys/class/power_supply/BAT1/' -- Path to battery dir.
config.low_level   = 18 -- Low battery level.
config.crit_level  = 9 -- Critical battery level.
config.timeout     = 5 -- Update interval in seconds.

-- Whether to display progressbars.
config.show_progressbar = false

-- Progressbar appearance.
config.max_value    = 1 -- Maximum value.
config.value        = 0 -- Initial value for the bar.
config.height       = nil -- Height (or leave nil for auto.)
config.width        = 50 -- Width (or leave nil for auto.)
config.step         = 5 -- Progressbar steps.
config.padding      = {top = 1, bottom = 1,} -- Padding.
config.margin       = {top = 5, bottom = 5,} -- Margin.
config.border_width = 1 -- Border thickness.
config.border_color = beautiful.fg_normal or '#87abef' -- Border color.
config.shape        = gears.shape['powerline'] -- Widget shape.
config.bar_shape    = gears.shape['rounded_bar'] -- Bar shape.
-- If you choose a custom widget, you should make sure
-- that it behave similarly (e.g: has a set_value method).
config.widget       = wibox.widget.progressbar -- Bar widget object.

-- Text layout.
config.align    = 'center'
config.font     = beautiful.font or 'Dejavu Sans Mono 10'

-- Widget colors.
config.fg_color_normal = beautiful.fg_normal or '#87abef'
config.fg_color_active = beautiful.green or '#698f1e'
config.fg_color_alert  = beautiful.red or '#cc2050'
config.fg_color_low    = config.fg_color_alert
config.fg_color_crit   = config.fg_color_alert
config.bg_color_active = beautiful.darkgreen or '#05390d'
config.bg_color_alert  = beautiful.color_darkred or '#631018'
config.bg_color_low    = config.bg_color_alert
config.bg_color_crit   = config.bg_color_alert

-- Battctl config.
config.charging_prefix    = '**'
config.charging_suffix    = '**'
config.discharging_prefix = ''
config.discharging_suffix = '%'
config.full_prefix        = '['
config.full_suffix        = ']'
config.battery_full       = 98 -- Full level (to accomodate batteries never reaching 100). 

-- Soundctl config.
config.soundctl_spawn = 'pavucontrol' -- Program to spawn on click. 
config.soundctl_step  = 5 -- Volume step changes (1..100).
config.soundctl_uber  = 125 -- Volume uber level. 

-- Lightctl hardcodes.
-- (In most cases you want to leave this alone.)
config.backlight_path       = '/sys/class/backlight/' -- Backlight path.
config.intel_dir            = 'intel_backlight/' -- Intel path.
config.amd_dir              = 'amdgpu_bl0/' -- AMD path.
config.brightness_file      = 'brightness' -- Brightness file to look for in backlight directory.
config.max_brightness_file  = 'max_brightness' -- Max brightness file.

-- Lightctl config.
config.use_light            = true -- Use light as backlight controller.
config.lightctl_use_percent = true -- Show percentages rather than absolute value. 
config.lightctl_precision   = 0 -- Floating point precision to show.
config.lightctl_step        = 25 -- Brightness step changes (1..100).
config.lightctl_edge        = 15 -- Range in which log functions decrease delta (1..100).

-- Spacectl config.
config.sep_list              = {'|'} -- List of separators used.
config.dynamic_sep           = false -- Use a dynamic separator (substitutable using sep_list).
config.spacectl_markup       = '' -- Widget markup. 
config.spacectl_align        = config.align -- Align Spacer text specifically.

-- Widget margins.
config.spacectl_margin_top   = 1
config.spacectl_margin_left  = 1
config.spacectl_margin_right = 1
config.spacectl_margin_top   = 1

-- Color and opacity.
config.spacectl_fg_color     = config.fg_color_normal
config.spacectl_opacity      = 0.8

-- Before and after spacing widget.
config.spacectl_prefix       = ''
config.spacectl_suffix       = ''

return config
